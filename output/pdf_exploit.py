import PyPDF2
import os
import sys

def embed_executable_in_pdf_with_js(pdf_path, exe_path, output_pdf):
    # Create a PDF writer object
    writer = PyPDF2.PdfWriter()
    
    # Read the existing PDF
    with open(pdf_path, 'rb') as pdf_file:
        reader = PyPDF2.PdfReader(pdf_file)
        
        # Add all pages from the original PDF to the writer
        for page in reader.pages:
            writer.add_page(page)
        
        # Embed the executable as an attachment
        writer.add_attachment(os.path.basename(exe_path), open(exe_path, 'rb').read())

        # Add JavaScript to the PDF (if the reader supports it)
        writer.add_js("app.alert('This is an example alert');")

        # Write the modified PDF to output
        with open(output_pdf, 'wb') as output_file:
            writer.write(output_file)

    print(f"Executable {exe_path} embedded and JavaScript added in PDF {output_pdf}")

def main():
    if len(sys.argv) != 7:
        print("Usage: python pdf_exploit.py -p <path_to_pdf> -e <path_to_executable> -o <output_pdf>")
        sys.exit(1)

    pdf_path = None
    exe_path = None
    output_pdf = None

    for i in range(1, len(sys.argv), 2):
        if sys.argv[i] == '-p':
            pdf_path = sys.argv[i+1]
        elif sys.argv[i] == '-e':
            exe_path = sys.argv[i+1]
        elif sys.argv[i] == '-o':
            output_pdf = sys.argv[i+1]

    if pdf_path and exe_path and output_pdf:
        embed_executable_in_pdf_with_js(pdf_path, exe_path, output_pdf)
    else:
        print("Invalid arguments")
        sys.exit(1)

if __name__ == "__main__":
    main()
